{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL||'https://seksnow.pl/api';export const api={get:async endpoint=>{try{const response=await fetch(`${API_URL}${endpoint}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`,'Content-Type':'application/json'}});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}return response.json();}catch(error){console.error('API Get Error:',error);throw error;}},post:async(endpoint,data)=>{try{const response=await fetch(`${API_URL}${endpoint}`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`,'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}return response.json();}catch(error){console.error('API Post Error:',error);throw error;}},// Admin endpoints\nadmin:{getUsers:()=>api.get('/admin/users'),getChats:()=>api.get('/admin/chats'),getPayments:()=>api.get('/admin/payments'),blockUser:userId=>api.post(`/admin/users/${userId}/block`),deleteChat:chatId=>api.delete(`/admin/chats/${chatId}`)},delete:async endpoint=>{try{const response=await fetch(`${API_URL}${endpoint}`,{method:'DELETE',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`,'Content-Type':'application/json'}});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}return response.json();}catch(error){console.error('API Delete Error:',error);throw error;}}};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","api","get","endpoint","response","fetch","headers","localStorage","getItem","ok","Error","status","json","error","console","post","data","method","body","JSON","stringify","admin","getUsers","getChats","getPayments","blockUser","userId","deleteChat","chatId","delete"],"sources":["/Users/lszydlowski/Desktop/czat_portal/frontend/src/services/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'https://seksnow.pl/api';\n\nexport const api = {\n  get: async (endpoint) => {\n    try {\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      return response.json();\n    } catch (error) {\n      console.error('API Get Error:', error);\n      throw error;\n    }\n  },\n\n  post: async (endpoint, data) => {\n    try {\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      return response.json();\n    } catch (error) {\n      console.error('API Post Error:', error);\n      throw error;\n    }\n  },\n// Admin endpoints\n  admin: {\n    getUsers: () => api.get('/admin/users'),\n    getChats: () => api.get('/admin/chats'),\n    getPayments: () => api.get('/admin/payments'),\n    blockUser: (userId) => api.post(`/admin/users/${userId}/block`),\n    deleteChat: (chatId) => api.delete(`/admin/chats/${chatId}`),\n  },\n\n  delete: async (endpoint) => {\n    try {\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    } catch (error) {\n      console.error('API Delete Error:', error);\n      throw error;\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}