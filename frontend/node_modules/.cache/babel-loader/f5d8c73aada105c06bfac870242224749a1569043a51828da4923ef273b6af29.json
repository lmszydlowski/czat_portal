{"ast":null,"code":"import { api } from './api';\nexport const authService = {\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('user', JSON.stringify(response.user));\n        return response;\n      }\n      throw new Error('Authentication failed - no token received');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please check your credentials');\n    }\n  },\n  register: async userData => {\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const klikId = urlParams.get('klikid');\n      const payload = klikId ? {\n        ...userData,\n        klikId\n      } : userData;\n      const response = await api.post('/auth/register', payload);\n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('user', JSON.stringify(response.user));\n      }\n      return response;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again');\n    }\n  },\n  verifyEmail: async token => {\n    try {\n      return await api.post(`/auth/verify-email/${token}`);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Email verification error:', error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Email verification failed');\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: async () => {\n    try {\n      const user = localStorage.getItem('user');\n      if (user) return JSON.parse(user);\n      const response = await api.get('/auth/user');\n      localStorage.setItem('user', JSON.stringify(response.data));\n      return response.data;\n    } catch (error) {\n      console.error('Get user error:', error);\n      localStorage.removeItem('token');\n      throw new Error('Session expired. Please log in again');\n    }\n  },\n  triggerModal: (modalType, data) => {\n    const modalEvent = new CustomEvent('modal_event', {\n      detail: {\n        modalType,\n        data\n      }\n    });\n    window.dispatchEvent(modalEvent);\n  },\n  showLoginModal: () => {\n    authService.triggerModal('login', {});\n  },\n  showRegisterModal: () => {\n    authService.triggerModal('register', {});\n  }\n};","map":{"version":3,"names":["api","authService","login","credentials","response","post","token","localStorage","setItem","JSON","stringify","user","Error","error","_error$response","_error$response$data","console","data","message","register","userData","urlParams","URLSearchParams","window","location","search","klikId","get","payload","_error$response2","_error$response2$data","verifyEmail","_error$response3","_error$response3$data","logout","removeItem","getCurrentUser","getItem","parse","triggerModal","modalType","modalEvent","CustomEvent","detail","dispatchEvent","showLoginModal","showRegisterModal"],"sources":["/Users/lszydlowski/Desktop/czat_portal/frontend/src/services/authService.js"],"sourcesContent":["import { api } from './api';\n\nexport const authService = {\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      \n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('user', JSON.stringify(response.user));\n        return response;\n      }\n      throw new Error('Authentication failed - no token received');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error(error.response?.data?.message || 'Login failed. Please check your credentials');\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const klikId = urlParams.get('klikid');\n      \n      const payload = klikId ? { ...userData, klikId } : userData;\n      const response = await api.post('/auth/register', payload);\n      \n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('user', JSON.stringify(response.user));\n      }\n      return response;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw new Error(error.response?.data?.message || 'Registration failed. Please try again');\n    }\n  },\n\n  verifyEmail: async (token) => {\n    try {\n      return await api.post(`/auth/verify-email/${token}`);\n    } catch (error) {\n      console.error('Email verification error:', error);\n      throw new Error(error.response?.data?.message || 'Email verification failed');\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const user = localStorage.getItem('user');\n      if (user) return JSON.parse(user);\n      \n      const response = await api.get('/auth/user');\n      localStorage.setItem('user', JSON.stringify(response.data));\n      return response.data;\n    } catch (error) {\n      console.error('Get user error:', error);\n      localStorage.removeItem('token');\n      throw new Error('Session expired. Please log in again');\n    }\n  },\n\n  triggerModal: (modalType, data) => {\n    const modalEvent = new CustomEvent('modal_event', { \n      detail: { modalType, data } \n    });\n    window.dispatchEvent(modalEvent);\n  },\n\n  showLoginModal: () => {\n    authService.triggerModal('login', {});\n  },\n\n  showRegisterModal: () => {\n    authService.triggerModal('register', {});\n  }\n};\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAE3B,OAAO,MAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;MAE3D,IAAIC,QAAQ,CAACE,KAAK,EAAE;QAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACE,KAAK,CAAC;QAC7CC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAC3D,OAAOP,QAAQ;MACjB;MACA,MAAM,IAAIQ,KAAK,CAAC,2CAA2C,CAAC;IAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAM,IAAID,KAAK,CAAC,EAAAE,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,6CAA6C,CAAC;IACjG;EACF,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACF,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC7D,MAAMC,MAAM,GAAGL,SAAS,CAACM,GAAG,CAAC,QAAQ,CAAC;MAEtC,MAAMC,OAAO,GAAGF,MAAM,GAAG;QAAE,GAAGN,QAAQ;QAAEM;MAAO,CAAC,GAAGN,QAAQ;MAC3D,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,gBAAgB,EAAEuB,OAAO,CAAC;MAE1D,IAAIxB,QAAQ,CAACE,KAAK,EAAE;QAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACE,KAAK,CAAC;QAC7CC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAgB,gBAAA,EAAAC,qBAAA;MACdd,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAM,IAAID,KAAK,CAAC,EAAAiB,gBAAA,GAAAhB,KAAK,CAACT,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,uCAAuC,CAAC;IAC3F;EACF,CAAC;EAEDa,WAAW,EAAE,MAAOzB,KAAK,IAAK;IAC5B,IAAI;MACF,OAAO,MAAMN,GAAG,CAACK,IAAI,CAAC,sBAAsBC,KAAK,EAAE,CAAC;IACtD,CAAC,CAAC,OAAOO,KAAK,EAAE;MAAA,IAAAmB,gBAAA,EAAAC,qBAAA;MACdjB,OAAO,CAACH,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAM,IAAID,KAAK,CAAC,EAAAoB,gBAAA,GAAAnB,KAAK,CAACT,QAAQ,cAAA4B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBf,OAAO,KAAI,2BAA2B,CAAC;IAC/E;EACF,CAAC;EAEDgB,MAAM,EAAEA,CAAA,KAAM;IACZ3B,YAAY,CAAC4B,UAAU,CAAC,OAAO,CAAC;IAChC5B,YAAY,CAAC4B,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMzB,IAAI,GAAGJ,YAAY,CAAC8B,OAAO,CAAC,MAAM,CAAC;MACzC,IAAI1B,IAAI,EAAE,OAAOF,IAAI,CAAC6B,KAAK,CAAC3B,IAAI,CAAC;MAEjC,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAAC2B,GAAG,CAAC,YAAY,CAAC;MAC5CpB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACa,IAAI,CAAC,CAAC;MAC3D,OAAOb,QAAQ,CAACa,IAAI;IACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCN,YAAY,CAAC4B,UAAU,CAAC,OAAO,CAAC;MAChC,MAAM,IAAIvB,KAAK,CAAC,sCAAsC,CAAC;IACzD;EACF,CAAC;EAED2B,YAAY,EAAEA,CAACC,SAAS,EAAEvB,IAAI,KAAK;IACjC,MAAMwB,UAAU,GAAG,IAAIC,WAAW,CAAC,aAAa,EAAE;MAChDC,MAAM,EAAE;QAAEH,SAAS;QAAEvB;MAAK;IAC5B,CAAC,CAAC;IACFM,MAAM,CAACqB,aAAa,CAACH,UAAU,CAAC;EAClC,CAAC;EAEDI,cAAc,EAAEA,CAAA,KAAM;IACpB5C,WAAW,CAACsC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;EACvC,CAAC;EAEDO,iBAAiB,EAAEA,CAAA,KAAM;IACvB7C,WAAW,CAACsC,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}